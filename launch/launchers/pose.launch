<?xml version="1.0"?>
<launch>
  <arg name="mock_pose" />
  <arg name="use_mocap" />
  <arg name="mock_ardrone" />

  <node name="pose_node"
    pkg="spirit"
    type="mock_pose.py"
    output="screen"
    if="$(arg mock_pose)" />

  <group unless="$(arg mock_pose)" >
    <group if="$(arg use_mocap)" >
      <node name="pose_node"
	    pkg="mocap_optitrack"
	    type="mocap_node"
	    respawn="false"
	    launch-prefix=""
	    required="true" >
	<rosparam file="$(find spirit)/config/mocap.yaml" command="load" />
      </node>
      <node name="mocap_pose_tf"
	pkg="spirit"
	type="mocap_pose_tf.py"
	output="screen" >
      </node>
    </group>

    <group unless="$(arg use_mocap)" >
      <node name="pose_node"
	pkg="spirit"
	type="mock_pose.py"
	output="screen"
	if="$(arg mock_ardrone)" />

      <node name="pose_node"
	pkg="spirit"
	type="pose_from_odometry.py"
	output="screen"
	unless="$(arg mock_ardrone)" />
    </group>
  </group>

  <!-- <node pkg="tf" type="static_transform_publisher" name="ardrone_base_frontcam2ardrone" args="0 0 0 0 0 0 1 ardrone_base_frontcam ardrone 100" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="ardrone_base_bottomcam2ardrone" args="0 0 0 0 0 0 1 ardrone_base_bottomcam ardrone 100" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="ardrone_base_link2ardrone" args="0 0 0 0 0 0 1 ardrone_base_link ardrone 100" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="odom2ardrone" args="0 0 0 0 0 0 1 odom ardrone 100" /> -->

  <node name="tracking_verifier" pkg="spirit" type="tracking_verifier.py" output="screen" />

</launch>

